%{
#include <stdio.h>
#include <stdlib.h>

void yyerror(char *s);
int yylex(void);


%}

%token DO WHILE CONDITION STMT

%%
PROGRAM: START {printf("Valid Syntax of do while\n");}
START: DO '{' STMT_LIST '}' WHILE CONDITION;
STMT_LIST: | START STMT_LIST | STMT;

%%


int main() {
    printf("Enter the do-while stmt to check for syntax validity: \n ");
    yyparse();   // Parse the input
    
    return 0;
}


void yyerror(char *s) {
    fprintf(stderr, "Error: %s\n", s);
}

/* change in program reference
%{
    #include <stdio.h>
    #include <stdlib.h>
    int valid = 1;
%}

%token DO WHILE LBRACE RBRACE PARANTHESIS OPERAND OPERATOR SEMICOLON NEWLINE

%%
start: DO LBRACE body RBRACE WHILE PARANTHESIS condition PARANTHESIS SEMICOLON NEWLINE
    {
        printf("Parsed do-while successfully.\n");
    }
    ;

body: statement
    | statement body
    ;

statement: OPERAND OPERATOR OPERAND SEMICOLON;

condition: OPERAND OPERATOR OPERAND;

%%

int yyerror(const char *s)
{
    valid = 0;
    fprintf(stderr, "Error: %s\n", s);
    return 1;
}

int main()
{
    printf("Enter a do-while loop:\n");
    yyparse();

    if (valid)
        printf("Valid syntax.\n");
    else
        printf("Invalid syntax.\n");

    return 0;
}
*/
